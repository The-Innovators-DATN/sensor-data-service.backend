// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.12.4
// source: stationpb/station.proto

package stationpb

import (
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	commonpb "sensor-data-service.backend/api/pb/commonpb"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TargetType int32

const (
	TargetType_UNKNOWN     TargetType = 0
	TargetType_STATION     TargetType = 1
	TargetType_WATER_BODY  TargetType = 2
	TargetType_CATCHMENT   TargetType = 3
	TargetType_RIVER_BASIN TargetType = 4
)

// Enum value maps for TargetType.
var (
	TargetType_name = map[int32]string{
		0: "UNKNOWN",
		1: "STATION",
		2: "WATER_BODY",
		3: "CATCHMENT",
		4: "RIVER_BASIN",
	}
	TargetType_value = map[string]int32{
		"UNKNOWN":     0,
		"STATION":     1,
		"WATER_BODY":  2,
		"CATCHMENT":   3,
		"RIVER_BASIN": 4,
	}
)

func (x TargetType) Enum() *TargetType {
	p := new(TargetType)
	*p = x
	return p
}

func (x TargetType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TargetType) Descriptor() protoreflect.EnumDescriptor {
	return file_stationpb_station_proto_enumTypes[0].Descriptor()
}

func (TargetType) Type() protoreflect.EnumType {
	return &file_stationpb_station_proto_enumTypes[0]
}

func (x TargetType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TargetType.Descriptor instead.
func (TargetType) EnumDescriptor() ([]byte, []int) {
	return file_stationpb_station_proto_rawDescGZIP(), []int{0}
}

// ENUM WRAPPER
type EnumValue struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type          string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EnumValue) Reset() {
	*x = EnumValue{}
	mi := &file_stationpb_station_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnumValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnumValue) ProtoMessage() {}

func (x *EnumValue) ProtoReflect() protoreflect.Message {
	mi := &file_stationpb_station_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnumValue.ProtoReflect.Descriptor instead.
func (*EnumValue) Descriptor() ([]byte, []int) {
	return file_stationpb_station_proto_rawDescGZIP(), []int{0}
}

func (x *EnumValue) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EnumValue) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

// STATION
type Station struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name           string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description    string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Lat            float32                `protobuf:"fixed32,4,opt,name=lat,proto3" json:"lat,omitempty"`
	Long           float32                `protobuf:"fixed32,5,opt,name=long,proto3" json:"long,omitempty"`
	Status         string                 `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	StationType    string                 `protobuf:"bytes,7,opt,name=station_type,json=stationType,proto3" json:"station_type,omitempty"`
	Country        string                 `protobuf:"bytes,8,opt,name=country,proto3" json:"country,omitempty"`
	WaterBodyId    int32                  `protobuf:"varint,9,opt,name=water_body_id,json=waterBodyId,proto3" json:"water_body_id,omitempty"`
	StationManager int32                  `protobuf:"varint,10,opt,name=station_manager,json=stationManager,proto3" json:"station_manager,omitempty"`
	CreatedAt      string                 `protobuf:"bytes,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt      string                 `protobuf:"bytes,12,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Station) Reset() {
	*x = Station{}
	mi := &file_stationpb_station_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Station) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Station) ProtoMessage() {}

func (x *Station) ProtoReflect() protoreflect.Message {
	mi := &file_stationpb_station_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Station.ProtoReflect.Descriptor instead.
func (*Station) Descriptor() ([]byte, []int) {
	return file_stationpb_station_proto_rawDescGZIP(), []int{1}
}

func (x *Station) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Station) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Station) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Station) GetLat() float32 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *Station) GetLong() float32 {
	if x != nil {
		return x.Long
	}
	return 0
}

func (x *Station) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Station) GetStationType() string {
	if x != nil {
		return x.StationType
	}
	return ""
}

func (x *Station) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *Station) GetWaterBodyId() int32 {
	if x != nil {
		return x.WaterBodyId
	}
	return 0
}

func (x *Station) GetStationManager() int32 {
	if x != nil {
		return x.StationManager
	}
	return 0
}

func (x *Station) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Station) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type StationParameter struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StationId     int32                  `protobuf:"varint,1,opt,name=station_id,json=stationId,proto3" json:"station_id,omitempty"`
	ParameterId   int32                  `protobuf:"varint,2,opt,name=parameter_id,json=parameterId,proto3" json:"parameter_id,omitempty"`
	Status        string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	LastReceivAt  string                 `protobuf:"bytes,4,opt,name=last_receiv_at,json=lastReceivAt,proto3" json:"last_receiv_at,omitempty"`
	LastValue     float64                `protobuf:"fixed64,5,opt,name=last_value,json=lastValue,proto3" json:"last_value,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     string                 `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StationParameter) Reset() {
	*x = StationParameter{}
	mi := &file_stationpb_station_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StationParameter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StationParameter) ProtoMessage() {}

func (x *StationParameter) ProtoReflect() protoreflect.Message {
	mi := &file_stationpb_station_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StationParameter.ProtoReflect.Descriptor instead.
func (*StationParameter) Descriptor() ([]byte, []int) {
	return file_stationpb_station_proto_rawDescGZIP(), []int{2}
}

func (x *StationParameter) GetStationId() int32 {
	if x != nil {
		return x.StationId
	}
	return 0
}

func (x *StationParameter) GetParameterId() int32 {
	if x != nil {
		return x.ParameterId
	}
	return 0
}

func (x *StationParameter) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *StationParameter) GetLastReceivAt() string {
	if x != nil {
		return x.LastReceivAt
	}
	return ""
}

func (x *StationParameter) GetLastValue() float64 {
	if x != nil {
		return x.LastValue
	}
	return 0
}

func (x *StationParameter) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *StationParameter) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type StationParameterList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*StationParameter    `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StationParameterList) Reset() {
	*x = StationParameterList{}
	mi := &file_stationpb_station_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StationParameterList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StationParameterList) ProtoMessage() {}

func (x *StationParameterList) ProtoReflect() protoreflect.Message {
	mi := &file_stationpb_station_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StationParameterList.ProtoReflect.Descriptor instead.
func (*StationParameterList) Descriptor() ([]byte, []int) {
	return file_stationpb_station_proto_rawDescGZIP(), []int{3}
}

func (x *StationParameterList) GetItems() []*StationParameter {
	if x != nil {
		return x.Items
	}
	return nil
}

type StationParamRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StationId     int32                  `protobuf:"varint,1,opt,name=station_id,json=stationId,proto3" json:"station_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StationParamRequest) Reset() {
	*x = StationParamRequest{}
	mi := &file_stationpb_station_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StationParamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StationParamRequest) ProtoMessage() {}

func (x *StationParamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_stationpb_station_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StationParamRequest.ProtoReflect.Descriptor instead.
func (*StationParamRequest) Descriptor() ([]byte, []int) {
	return file_stationpb_station_proto_rawDescGZIP(), []int{4}
}

func (x *StationParamRequest) GetStationId() int32 {
	if x != nil {
		return x.StationId
	}
	return 0
}

type StationQuery struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Keyword       string                 `protobuf:"bytes,1,opt,name=keyword,proto3" json:"keyword,omitempty"`
	WaterBodyId   int32                  `protobuf:"varint,2,opt,name=water_body_id,json=waterBodyId,proto3" json:"water_body_id,omitempty"`
	CatchmentId   int32                  `protobuf:"varint,3,opt,name=catchment_id,json=catchmentId,proto3" json:"catchment_id,omitempty"`
	RiverBasinId  int32                  `protobuf:"varint,4,opt,name=river_basin_id,json=riverBasinId,proto3" json:"river_basin_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StationQuery) Reset() {
	*x = StationQuery{}
	mi := &file_stationpb_station_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StationQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StationQuery) ProtoMessage() {}

func (x *StationQuery) ProtoReflect() protoreflect.Message {
	mi := &file_stationpb_station_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StationQuery.ProtoReflect.Descriptor instead.
func (*StationQuery) Descriptor() ([]byte, []int) {
	return file_stationpb_station_proto_rawDescGZIP(), []int{5}
}

func (x *StationQuery) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *StationQuery) GetWaterBodyId() int32 {
	if x != nil {
		return x.WaterBodyId
	}
	return 0
}

func (x *StationQuery) GetCatchmentId() int32 {
	if x != nil {
		return x.CatchmentId
	}
	return 0
}

func (x *StationQuery) GetRiverBasinId() int32 {
	if x != nil {
		return x.RiverBasinId
	}
	return 0
}

type StationID struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StationID) Reset() {
	*x = StationID{}
	mi := &file_stationpb_station_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StationID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StationID) ProtoMessage() {}

func (x *StationID) ProtoReflect() protoreflect.Message {
	mi := &file_stationpb_station_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StationID.ProtoReflect.Descriptor instead.
func (*StationID) Descriptor() ([]byte, []int) {
	return file_stationpb_station_proto_rawDescGZIP(), []int{6}
}

func (x *StationID) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type RiverBasinID struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RiverBasinID) Reset() {
	*x = RiverBasinID{}
	mi := &file_stationpb_station_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RiverBasinID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiverBasinID) ProtoMessage() {}

func (x *RiverBasinID) ProtoReflect() protoreflect.Message {
	mi := &file_stationpb_station_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiverBasinID.ProtoReflect.Descriptor instead.
func (*RiverBasinID) Descriptor() ([]byte, []int) {
	return file_stationpb_station_proto_rawDescGZIP(), []int{7}
}

func (x *RiverBasinID) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CatchmentID struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CatchmentID) Reset() {
	*x = CatchmentID{}
	mi := &file_stationpb_station_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CatchmentID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CatchmentID) ProtoMessage() {}

func (x *CatchmentID) ProtoReflect() protoreflect.Message {
	mi := &file_stationpb_station_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CatchmentID.ProtoReflect.Descriptor instead.
func (*CatchmentID) Descriptor() ([]byte, []int) {
	return file_stationpb_station_proto_rawDescGZIP(), []int{8}
}

func (x *CatchmentID) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type WaterBodyID struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WaterBodyID) Reset() {
	*x = WaterBodyID{}
	mi := &file_stationpb_station_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WaterBodyID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaterBodyID) ProtoMessage() {}

func (x *WaterBodyID) ProtoReflect() protoreflect.Message {
	mi := &file_stationpb_station_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaterBodyID.ProtoReflect.Descriptor instead.
func (*WaterBodyID) Descriptor() ([]byte, []int) {
	return file_stationpb_station_proto_rawDescGZIP(), []int{9}
}

func (x *WaterBodyID) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type StationList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Stations      []*Station             `protobuf:"bytes,1,rep,name=stations,proto3" json:"stations,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StationList) Reset() {
	*x = StationList{}
	mi := &file_stationpb_station_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StationList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StationList) ProtoMessage() {}

func (x *StationList) ProtoReflect() protoreflect.Message {
	mi := &file_stationpb_station_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StationList.ProtoReflect.Descriptor instead.
func (*StationList) Descriptor() ([]byte, []int) {
	return file_stationpb_station_proto_rawDescGZIP(), []int{10}
}

func (x *StationList) GetStations() []*Station {
	if x != nil {
		return x.Stations
	}
	return nil
}

type StationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Station       *Station               `protobuf:"bytes,1,opt,name=station,proto3" json:"station,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StationResponse) Reset() {
	*x = StationResponse{}
	mi := &file_stationpb_station_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StationResponse) ProtoMessage() {}

func (x *StationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_stationpb_station_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StationResponse.ProtoReflect.Descriptor instead.
func (*StationResponse) Descriptor() ([]byte, []int) {
	return file_stationpb_station_proto_rawDescGZIP(), []int{11}
}

func (x *StationResponse) GetStation() *Station {
	if x != nil {
		return x.Station
	}
	return nil
}

type StationLocation struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	WaterBodyName  string                 `protobuf:"bytes,1,opt,name=water_body_name,json=waterBodyName,proto3" json:"water_body_name,omitempty"`
	WaterBodyType  string                 `protobuf:"bytes,2,opt,name=water_body_type,json=waterBodyType,proto3" json:"water_body_type,omitempty"`
	CatchmentId    int32                  `protobuf:"varint,3,opt,name=catchment_id,json=catchmentId,proto3" json:"catchment_id,omitempty"`
	CatchmentName  string                 `protobuf:"bytes,4,opt,name=catchment_name,json=catchmentName,proto3" json:"catchment_name,omitempty"`
	CatchmentDesc  string                 `protobuf:"bytes,5,opt,name=catchment_desc,json=catchmentDesc,proto3" json:"catchment_desc,omitempty"`
	RiverBasinId   int32                  `protobuf:"varint,6,opt,name=river_basin_id,json=riverBasinId,proto3" json:"river_basin_id,omitempty"`
	RiverBasinName string                 `protobuf:"bytes,7,opt,name=river_basin_name,json=riverBasinName,proto3" json:"river_basin_name,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *StationLocation) Reset() {
	*x = StationLocation{}
	mi := &file_stationpb_station_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StationLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StationLocation) ProtoMessage() {}

func (x *StationLocation) ProtoReflect() protoreflect.Message {
	mi := &file_stationpb_station_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StationLocation.ProtoReflect.Descriptor instead.
func (*StationLocation) Descriptor() ([]byte, []int) {
	return file_stationpb_station_proto_rawDescGZIP(), []int{12}
}

func (x *StationLocation) GetWaterBodyName() string {
	if x != nil {
		return x.WaterBodyName
	}
	return ""
}

func (x *StationLocation) GetWaterBodyType() string {
	if x != nil {
		return x.WaterBodyType
	}
	return ""
}

func (x *StationLocation) GetCatchmentId() int32 {
	if x != nil {
		return x.CatchmentId
	}
	return 0
}

func (x *StationLocation) GetCatchmentName() string {
	if x != nil {
		return x.CatchmentName
	}
	return ""
}

func (x *StationLocation) GetCatchmentDesc() string {
	if x != nil {
		return x.CatchmentDesc
	}
	return ""
}

func (x *StationLocation) GetRiverBasinId() int32 {
	if x != nil {
		return x.RiverBasinId
	}
	return 0
}

func (x *StationLocation) GetRiverBasinName() string {
	if x != nil {
		return x.RiverBasinName
	}
	return ""
}

type StationWithLocation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Station       *Station               `protobuf:"bytes,1,opt,name=station,proto3" json:"station,omitempty"`
	Location      *StationLocation       `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StationWithLocation) Reset() {
	*x = StationWithLocation{}
	mi := &file_stationpb_station_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StationWithLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StationWithLocation) ProtoMessage() {}

func (x *StationWithLocation) ProtoReflect() protoreflect.Message {
	mi := &file_stationpb_station_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StationWithLocation.ProtoReflect.Descriptor instead.
func (*StationWithLocation) Descriptor() ([]byte, []int) {
	return file_stationpb_station_proto_rawDescGZIP(), []int{13}
}

func (x *StationWithLocation) GetStation() *Station {
	if x != nil {
		return x.Station
	}
	return nil
}

func (x *StationWithLocation) GetLocation() *StationLocation {
	if x != nil {
		return x.Location
	}
	return nil
}

// WATER BODY
type WaterBody struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type          string                 `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	CatchmentId   int32                  `protobuf:"varint,4,opt,name=catchment_id,json=catchmentId,proto3" json:"catchment_id,omitempty"`
	Description   string                 `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	UpdatedAt     string                 `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Status        string                 `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WaterBody) Reset() {
	*x = WaterBody{}
	mi := &file_stationpb_station_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WaterBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaterBody) ProtoMessage() {}

func (x *WaterBody) ProtoReflect() protoreflect.Message {
	mi := &file_stationpb_station_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaterBody.ProtoReflect.Descriptor instead.
func (*WaterBody) Descriptor() ([]byte, []int) {
	return file_stationpb_station_proto_rawDescGZIP(), []int{14}
}

func (x *WaterBody) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *WaterBody) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WaterBody) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *WaterBody) GetCatchmentId() int32 {
	if x != nil {
		return x.CatchmentId
	}
	return 0
}

func (x *WaterBody) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *WaterBody) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *WaterBody) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type WaterBodyQuery struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Keyword       string                 `protobuf:"bytes,1,opt,name=keyword,proto3" json:"keyword,omitempty"`
	CatchmentId   int32                  `protobuf:"varint,2,opt,name=catchment_id,json=catchmentId,proto3" json:"catchment_id,omitempty"`
	Type          string                 `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WaterBodyQuery) Reset() {
	*x = WaterBodyQuery{}
	mi := &file_stationpb_station_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WaterBodyQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaterBodyQuery) ProtoMessage() {}

func (x *WaterBodyQuery) ProtoReflect() protoreflect.Message {
	mi := &file_stationpb_station_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaterBodyQuery.ProtoReflect.Descriptor instead.
func (*WaterBodyQuery) Descriptor() ([]byte, []int) {
	return file_stationpb_station_proto_rawDescGZIP(), []int{15}
}

func (x *WaterBodyQuery) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *WaterBodyQuery) GetCatchmentId() int32 {
	if x != nil {
		return x.CatchmentId
	}
	return 0
}

func (x *WaterBodyQuery) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type WaterBodyList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WaterBodies   []*WaterBody           `protobuf:"bytes,1,rep,name=water_bodies,json=waterBodies,proto3" json:"water_bodies,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WaterBodyList) Reset() {
	*x = WaterBodyList{}
	mi := &file_stationpb_station_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WaterBodyList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaterBodyList) ProtoMessage() {}

func (x *WaterBodyList) ProtoReflect() protoreflect.Message {
	mi := &file_stationpb_station_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaterBodyList.ProtoReflect.Descriptor instead.
func (*WaterBodyList) Descriptor() ([]byte, []int) {
	return file_stationpb_station_proto_rawDescGZIP(), []int{16}
}

func (x *WaterBodyList) GetWaterBodies() []*WaterBody {
	if x != nil {
		return x.WaterBodies
	}
	return nil
}

type WaterBodyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WaterBody     *WaterBody             `protobuf:"bytes,1,opt,name=water_body,json=waterBody,proto3" json:"water_body,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WaterBodyResponse) Reset() {
	*x = WaterBodyResponse{}
	mi := &file_stationpb_station_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WaterBodyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaterBodyResponse) ProtoMessage() {}

func (x *WaterBodyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_stationpb_station_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaterBodyResponse.ProtoReflect.Descriptor instead.
func (*WaterBodyResponse) Descriptor() ([]byte, []int) {
	return file_stationpb_station_proto_rawDescGZIP(), []int{17}
}

func (x *WaterBodyResponse) GetWaterBody() *WaterBody {
	if x != nil {
		return x.WaterBody
	}
	return nil
}

// CATCHMENT
type Catchment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	RiverBasinId  int32                  `protobuf:"varint,3,opt,name=river_basin_id,json=riverBasinId,proto3" json:"river_basin_id,omitempty"`
	Country       string                 `protobuf:"bytes,4,opt,name=country,proto3" json:"country,omitempty"`
	Description   string                 `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	Status        string                 `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	UpdatedAt     string                 `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Catchment) Reset() {
	*x = Catchment{}
	mi := &file_stationpb_station_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Catchment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Catchment) ProtoMessage() {}

func (x *Catchment) ProtoReflect() protoreflect.Message {
	mi := &file_stationpb_station_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Catchment.ProtoReflect.Descriptor instead.
func (*Catchment) Descriptor() ([]byte, []int) {
	return file_stationpb_station_proto_rawDescGZIP(), []int{18}
}

func (x *Catchment) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Catchment) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Catchment) GetRiverBasinId() int32 {
	if x != nil {
		return x.RiverBasinId
	}
	return 0
}

func (x *Catchment) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *Catchment) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Catchment) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Catchment) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type CatchmentQuery struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Keyword       string                 `protobuf:"bytes,1,opt,name=keyword,proto3" json:"keyword,omitempty"`
	RiverBasinId  int32                  `protobuf:"varint,2,opt,name=river_basin_id,json=riverBasinId,proto3" json:"river_basin_id,omitempty"`
	Country       string                 `protobuf:"bytes,3,opt,name=country,proto3" json:"country,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CatchmentQuery) Reset() {
	*x = CatchmentQuery{}
	mi := &file_stationpb_station_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CatchmentQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CatchmentQuery) ProtoMessage() {}

func (x *CatchmentQuery) ProtoReflect() protoreflect.Message {
	mi := &file_stationpb_station_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CatchmentQuery.ProtoReflect.Descriptor instead.
func (*CatchmentQuery) Descriptor() ([]byte, []int) {
	return file_stationpb_station_proto_rawDescGZIP(), []int{19}
}

func (x *CatchmentQuery) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *CatchmentQuery) GetRiverBasinId() int32 {
	if x != nil {
		return x.RiverBasinId
	}
	return 0
}

func (x *CatchmentQuery) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

type StationType struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StationType) Reset() {
	*x = StationType{}
	mi := &file_stationpb_station_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StationType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StationType) ProtoMessage() {}

func (x *StationType) ProtoReflect() protoreflect.Message {
	mi := &file_stationpb_station_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StationType.ProtoReflect.Descriptor instead.
func (*StationType) Descriptor() ([]byte, []int) {
	return file_stationpb_station_proto_rawDescGZIP(), []int{20}
}

func (x *StationType) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type CatchmentList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Catchments    []*Catchment           `protobuf:"bytes,1,rep,name=catchments,proto3" json:"catchments,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CatchmentList) Reset() {
	*x = CatchmentList{}
	mi := &file_stationpb_station_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CatchmentList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CatchmentList) ProtoMessage() {}

func (x *CatchmentList) ProtoReflect() protoreflect.Message {
	mi := &file_stationpb_station_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CatchmentList.ProtoReflect.Descriptor instead.
func (*CatchmentList) Descriptor() ([]byte, []int) {
	return file_stationpb_station_proto_rawDescGZIP(), []int{21}
}

func (x *CatchmentList) GetCatchments() []*Catchment {
	if x != nil {
		return x.Catchments
	}
	return nil
}

type CatchmentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Catchment     *Catchment             `protobuf:"bytes,1,opt,name=catchment,proto3" json:"catchment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CatchmentResponse) Reset() {
	*x = CatchmentResponse{}
	mi := &file_stationpb_station_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CatchmentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CatchmentResponse) ProtoMessage() {}

func (x *CatchmentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_stationpb_station_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CatchmentResponse.ProtoReflect.Descriptor instead.
func (*CatchmentResponse) Descriptor() ([]byte, []int) {
	return file_stationpb_station_proto_rawDescGZIP(), []int{22}
}

func (x *CatchmentResponse) GetCatchment() *Catchment {
	if x != nil {
		return x.Catchment
	}
	return nil
}

// RIVER BASIN
type RiverBasin struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Status        string                 `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	UpdatedAt     string                 `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RiverBasin) Reset() {
	*x = RiverBasin{}
	mi := &file_stationpb_station_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RiverBasin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiverBasin) ProtoMessage() {}

func (x *RiverBasin) ProtoReflect() protoreflect.Message {
	mi := &file_stationpb_station_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiverBasin.ProtoReflect.Descriptor instead.
func (*RiverBasin) Descriptor() ([]byte, []int) {
	return file_stationpb_station_proto_rawDescGZIP(), []int{23}
}

func (x *RiverBasin) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RiverBasin) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RiverBasin) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *RiverBasin) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *RiverBasin) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type RiverBasinQuery struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Keyword       string                 `protobuf:"bytes,1,opt,name=keyword,proto3" json:"keyword,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RiverBasinQuery) Reset() {
	*x = RiverBasinQuery{}
	mi := &file_stationpb_station_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RiverBasinQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiverBasinQuery) ProtoMessage() {}

func (x *RiverBasinQuery) ProtoReflect() protoreflect.Message {
	mi := &file_stationpb_station_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiverBasinQuery.ProtoReflect.Descriptor instead.
func (*RiverBasinQuery) Descriptor() ([]byte, []int) {
	return file_stationpb_station_proto_rawDescGZIP(), []int{24}
}

func (x *RiverBasinQuery) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *RiverBasinQuery) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type RiverBasinList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RiverBasins   []*RiverBasin          `protobuf:"bytes,1,rep,name=river_basins,json=riverBasins,proto3" json:"river_basins,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RiverBasinList) Reset() {
	*x = RiverBasinList{}
	mi := &file_stationpb_station_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RiverBasinList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiverBasinList) ProtoMessage() {}

func (x *RiverBasinList) ProtoReflect() protoreflect.Message {
	mi := &file_stationpb_station_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiverBasinList.ProtoReflect.Descriptor instead.
func (*RiverBasinList) Descriptor() ([]byte, []int) {
	return file_stationpb_station_proto_rawDescGZIP(), []int{25}
}

func (x *RiverBasinList) GetRiverBasins() []*RiverBasin {
	if x != nil {
		return x.RiverBasins
	}
	return nil
}

type RiverBasinResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RiverBasin    *RiverBasin            `protobuf:"bytes,1,opt,name=river_basin,json=riverBasin,proto3" json:"river_basin,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RiverBasinResponse) Reset() {
	*x = RiverBasinResponse{}
	mi := &file_stationpb_station_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RiverBasinResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiverBasinResponse) ProtoMessage() {}

func (x *RiverBasinResponse) ProtoReflect() protoreflect.Message {
	mi := &file_stationpb_station_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiverBasinResponse.ProtoReflect.Descriptor instead.
func (*RiverBasinResponse) Descriptor() ([]byte, []int) {
	return file_stationpb_station_proto_rawDescGZIP(), []int{26}
}

func (x *RiverBasinResponse) GetRiverBasin() *RiverBasin {
	if x != nil {
		return x.RiverBasin
	}
	return nil
}

type StationAttachment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uid           string                 `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	StationId     int32                  `protobuf:"varint,2,opt,name=station_id,json=stationId,proto3" json:"station_id,omitempty"`
	DisplayName   string                 `protobuf:"bytes,3,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	Filename      string                 `protobuf:"bytes,4,opt,name=filename,proto3" json:"filename,omitempty"`
	ContentType   string                 `protobuf:"bytes,5,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	Size          int32                  `protobuf:"varint,6,opt,name=size,proto3" json:"size,omitempty"`
	WorkflowState string                 `protobuf:"bytes,7,opt,name=workflow_state,json=workflowState,proto3" json:"workflow_state,omitempty"`
	FileState     string                 `protobuf:"bytes,8,opt,name=file_state,json=fileState,proto3" json:"file_state,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     string                 `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StationAttachment) Reset() {
	*x = StationAttachment{}
	mi := &file_stationpb_station_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StationAttachment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StationAttachment) ProtoMessage() {}

func (x *StationAttachment) ProtoReflect() protoreflect.Message {
	mi := &file_stationpb_station_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StationAttachment.ProtoReflect.Descriptor instead.
func (*StationAttachment) Descriptor() ([]byte, []int) {
	return file_stationpb_station_proto_rawDescGZIP(), []int{27}
}

func (x *StationAttachment) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *StationAttachment) GetStationId() int32 {
	if x != nil {
		return x.StationId
	}
	return 0
}

func (x *StationAttachment) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *StationAttachment) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *StationAttachment) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *StationAttachment) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *StationAttachment) GetWorkflowState() string {
	if x != nil {
		return x.WorkflowState
	}
	return ""
}

func (x *StationAttachment) GetFileState() string {
	if x != nil {
		return x.FileState
	}
	return ""
}

func (x *StationAttachment) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *StationAttachment) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type StationAttachmentList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*StationAttachment   `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StationAttachmentList) Reset() {
	*x = StationAttachmentList{}
	mi := &file_stationpb_station_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StationAttachmentList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StationAttachmentList) ProtoMessage() {}

func (x *StationAttachmentList) ProtoReflect() protoreflect.Message {
	mi := &file_stationpb_station_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StationAttachmentList.ProtoReflect.Descriptor instead.
func (*StationAttachmentList) Descriptor() ([]byte, []int) {
	return file_stationpb_station_proto_rawDescGZIP(), []int{28}
}

func (x *StationAttachmentList) GetItems() []*StationAttachment {
	if x != nil {
		return x.Items
	}
	return nil
}

// STATION UPLOAD
type UploadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StationId     int32                  `protobuf:"varint,1,opt,name=station_id,json=stationId,proto3" json:"station_id,omitempty"`
	FileName      string                 `protobuf:"bytes,2,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	FileContent   []byte                 `protobuf:"bytes,3,opt,name=file_content,json=fileContent,proto3" json:"file_content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadRequest) Reset() {
	*x = UploadRequest{}
	mi := &file_stationpb_station_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadRequest) ProtoMessage() {}

func (x *UploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_stationpb_station_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadRequest.ProtoReflect.Descriptor instead.
func (*UploadRequest) Descriptor() ([]byte, []int) {
	return file_stationpb_station_proto_rawDescGZIP(), []int{29}
}

func (x *UploadRequest) GetStationId() int32 {
	if x != nil {
		return x.StationId
	}
	return 0
}

func (x *UploadRequest) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *UploadRequest) GetFileContent() []byte {
	if x != nil {
		return x.FileContent
	}
	return nil
}

// TARGET SELECTOR
type TargetSelector struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TargetType    TargetType             `protobuf:"varint,1,opt,name=target_type,json=targetType,proto3,enum=station.TargetType" json:"target_type,omitempty"`
	TargetId      int32                  `protobuf:"varint,2,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TargetSelector) Reset() {
	*x = TargetSelector{}
	mi := &file_stationpb_station_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TargetSelector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TargetSelector) ProtoMessage() {}

func (x *TargetSelector) ProtoReflect() protoreflect.Message {
	mi := &file_stationpb_station_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TargetSelector.ProtoReflect.Descriptor instead.
func (*TargetSelector) Descriptor() ([]byte, []int) {
	return file_stationpb_station_proto_rawDescGZIP(), []int{30}
}

func (x *TargetSelector) GetTargetType() TargetType {
	if x != nil {
		return x.TargetType
	}
	return TargetType_UNKNOWN
}

func (x *TargetSelector) GetTargetId() int32 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

type StationIDList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StationIds    []int32                `protobuf:"varint,1,rep,packed,name=station_ids,json=stationIds,proto3" json:"station_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StationIDList) Reset() {
	*x = StationIDList{}
	mi := &file_stationpb_station_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StationIDList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StationIDList) ProtoMessage() {}

func (x *StationIDList) ProtoReflect() protoreflect.Message {
	mi := &file_stationpb_station_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StationIDList.ProtoReflect.Descriptor instead.
func (*StationIDList) Descriptor() ([]byte, []int) {
	return file_stationpb_station_proto_rawDescGZIP(), []int{31}
}

func (x *StationIDList) GetStationIds() []int32 {
	if x != nil {
		return x.StationIds
	}
	return nil
}

// STATUS
type OperationStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OperationStatus) Reset() {
	*x = OperationStatus{}
	mi := &file_stationpb_station_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OperationStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperationStatus) ProtoMessage() {}

func (x *OperationStatus) ProtoReflect() protoreflect.Message {
	mi := &file_stationpb_station_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperationStatus.ProtoReflect.Descriptor instead.
func (*OperationStatus) Descriptor() ([]byte, []int) {
	return file_stationpb_station_proto_rawDescGZIP(), []int{32}
}

func (x *OperationStatus) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *OperationStatus) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// ENUM TABLE LIST RESPONSE
type EnumList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Values        []*EnumValue           `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EnumList) Reset() {
	*x = EnumList{}
	mi := &file_stationpb_station_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnumList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnumList) ProtoMessage() {}

func (x *EnumList) ProtoReflect() protoreflect.Message {
	mi := &file_stationpb_station_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnumList.ProtoReflect.Descriptor instead.
func (*EnumList) Descriptor() ([]byte, []int) {
	return file_stationpb_station_proto_rawDescGZIP(), []int{33}
}

func (x *EnumList) GetValues() []*EnumValue {
	if x != nil {
		return x.Values
	}
	return nil
}

var File_stationpb_station_proto protoreflect.FileDescriptor

const file_stationpb_station_proto_rawDesc = "" +
	"\n" +
	"\x17stationpb/station.proto\x12\astation\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1cgoogle/api/annotations.proto\x1a\x15commonpb/common.proto\"3\n" +
	"\tEnumValue\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\"\xd5\x02\n" +
	"\aStation\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x10\n" +
	"\x03lat\x18\x04 \x01(\x02R\x03lat\x12\x12\n" +
	"\x04long\x18\x05 \x01(\x02R\x04long\x12\x16\n" +
	"\x06status\x18\x06 \x01(\tR\x06status\x12!\n" +
	"\fstation_type\x18\a \x01(\tR\vstationType\x12\x18\n" +
	"\acountry\x18\b \x01(\tR\acountry\x12\"\n" +
	"\rwater_body_id\x18\t \x01(\x05R\vwaterBodyId\x12'\n" +
	"\x0fstation_manager\x18\n" +
	" \x01(\x05R\x0estationManager\x12\x1d\n" +
	"\n" +
	"created_at\x18\v \x01(\tR\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\f \x01(\tR\tupdatedAt\"\xef\x01\n" +
	"\x10StationParameter\x12\x1d\n" +
	"\n" +
	"station_id\x18\x01 \x01(\x05R\tstationId\x12!\n" +
	"\fparameter_id\x18\x02 \x01(\x05R\vparameterId\x12\x16\n" +
	"\x06status\x18\x03 \x01(\tR\x06status\x12$\n" +
	"\x0elast_receiv_at\x18\x04 \x01(\tR\flastReceivAt\x12\x1d\n" +
	"\n" +
	"last_value\x18\x05 \x01(\x01R\tlastValue\x12\x1d\n" +
	"\n" +
	"created_at\x18\x06 \x01(\tR\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\a \x01(\tR\tupdatedAt\"G\n" +
	"\x14StationParameterList\x12/\n" +
	"\x05items\x18\x01 \x03(\v2\x19.station.StationParameterR\x05items\"4\n" +
	"\x13StationParamRequest\x12\x1d\n" +
	"\n" +
	"station_id\x18\x01 \x01(\x05R\tstationId\"\x95\x01\n" +
	"\fStationQuery\x12\x18\n" +
	"\akeyword\x18\x01 \x01(\tR\akeyword\x12\"\n" +
	"\rwater_body_id\x18\x02 \x01(\x05R\vwaterBodyId\x12!\n" +
	"\fcatchment_id\x18\x03 \x01(\x05R\vcatchmentId\x12$\n" +
	"\x0eriver_basin_id\x18\x04 \x01(\x05R\friverBasinId\"\x1b\n" +
	"\tStationID\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\"\x1e\n" +
	"\fRiverBasinID\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\"\x1d\n" +
	"\vCatchmentID\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\"\x1d\n" +
	"\vWaterBodyID\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\";\n" +
	"\vStationList\x12,\n" +
	"\bstations\x18\x01 \x03(\v2\x10.station.StationR\bstations\"=\n" +
	"\x0fStationResponse\x12*\n" +
	"\astation\x18\x01 \x01(\v2\x10.station.StationR\astation\"\xa2\x02\n" +
	"\x0fStationLocation\x12&\n" +
	"\x0fwater_body_name\x18\x01 \x01(\tR\rwaterBodyName\x12&\n" +
	"\x0fwater_body_type\x18\x02 \x01(\tR\rwaterBodyType\x12!\n" +
	"\fcatchment_id\x18\x03 \x01(\x05R\vcatchmentId\x12%\n" +
	"\x0ecatchment_name\x18\x04 \x01(\tR\rcatchmentName\x12%\n" +
	"\x0ecatchment_desc\x18\x05 \x01(\tR\rcatchmentDesc\x12$\n" +
	"\x0eriver_basin_id\x18\x06 \x01(\x05R\friverBasinId\x12(\n" +
	"\x10river_basin_name\x18\a \x01(\tR\x0eriverBasinName\"w\n" +
	"\x13StationWithLocation\x12*\n" +
	"\astation\x18\x01 \x01(\v2\x10.station.StationR\astation\x124\n" +
	"\blocation\x18\x02 \x01(\v2\x18.station.StationLocationR\blocation\"\xbf\x01\n" +
	"\tWaterBody\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x12\n" +
	"\x04type\x18\x03 \x01(\tR\x04type\x12!\n" +
	"\fcatchment_id\x18\x04 \x01(\x05R\vcatchmentId\x12 \n" +
	"\vdescription\x18\x05 \x01(\tR\vdescription\x12\x1d\n" +
	"\n" +
	"updated_at\x18\x06 \x01(\tR\tupdatedAt\x12\x16\n" +
	"\x06status\x18\a \x01(\tR\x06status\"a\n" +
	"\x0eWaterBodyQuery\x12\x18\n" +
	"\akeyword\x18\x01 \x01(\tR\akeyword\x12!\n" +
	"\fcatchment_id\x18\x02 \x01(\x05R\vcatchmentId\x12\x12\n" +
	"\x04type\x18\x03 \x01(\tR\x04type\"F\n" +
	"\rWaterBodyList\x125\n" +
	"\fwater_bodies\x18\x01 \x03(\v2\x12.station.WaterBodyR\vwaterBodies\"F\n" +
	"\x11WaterBodyResponse\x121\n" +
	"\n" +
	"water_body\x18\x01 \x01(\v2\x12.station.WaterBodyR\twaterBody\"\xc8\x01\n" +
	"\tCatchment\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12$\n" +
	"\x0eriver_basin_id\x18\x03 \x01(\x05R\friverBasinId\x12\x18\n" +
	"\acountry\x18\x04 \x01(\tR\acountry\x12 \n" +
	"\vdescription\x18\x05 \x01(\tR\vdescription\x12\x16\n" +
	"\x06status\x18\x06 \x01(\tR\x06status\x12\x1d\n" +
	"\n" +
	"updated_at\x18\a \x01(\tR\tupdatedAt\"j\n" +
	"\x0eCatchmentQuery\x12\x18\n" +
	"\akeyword\x18\x01 \x01(\tR\akeyword\x12$\n" +
	"\x0eriver_basin_id\x18\x02 \x01(\x05R\friverBasinId\x12\x18\n" +
	"\acountry\x18\x03 \x01(\tR\acountry\"!\n" +
	"\vStationType\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\"C\n" +
	"\rCatchmentList\x122\n" +
	"\n" +
	"catchments\x18\x01 \x03(\v2\x12.station.CatchmentR\n" +
	"catchments\"E\n" +
	"\x11CatchmentResponse\x120\n" +
	"\tcatchment\x18\x01 \x01(\v2\x12.station.CatchmentR\tcatchment\"\x89\x01\n" +
	"\n" +
	"RiverBasin\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x16\n" +
	"\x06status\x18\x04 \x01(\tR\x06status\x12\x1d\n" +
	"\n" +
	"updated_at\x18\x05 \x01(\tR\tupdatedAt\"C\n" +
	"\x0fRiverBasinQuery\x12\x18\n" +
	"\akeyword\x18\x01 \x01(\tR\akeyword\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\"H\n" +
	"\x0eRiverBasinList\x126\n" +
	"\friver_basins\x18\x01 \x03(\v2\x13.station.RiverBasinR\vriverBasins\"J\n" +
	"\x12RiverBasinResponse\x124\n" +
	"\vriver_basin\x18\x01 \x01(\v2\x13.station.RiverBasinR\n" +
	"riverBasin\"\xbe\x02\n" +
	"\x11StationAttachment\x12\x10\n" +
	"\x03uid\x18\x01 \x01(\tR\x03uid\x12\x1d\n" +
	"\n" +
	"station_id\x18\x02 \x01(\x05R\tstationId\x12!\n" +
	"\fdisplay_name\x18\x03 \x01(\tR\vdisplayName\x12\x1a\n" +
	"\bfilename\x18\x04 \x01(\tR\bfilename\x12!\n" +
	"\fcontent_type\x18\x05 \x01(\tR\vcontentType\x12\x12\n" +
	"\x04size\x18\x06 \x01(\x05R\x04size\x12%\n" +
	"\x0eworkflow_state\x18\a \x01(\tR\rworkflowState\x12\x1d\n" +
	"\n" +
	"file_state\x18\b \x01(\tR\tfileState\x12\x1d\n" +
	"\n" +
	"created_at\x18\t \x01(\tR\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\n" +
	" \x01(\tR\tupdatedAt\"I\n" +
	"\x15StationAttachmentList\x120\n" +
	"\x05items\x18\x01 \x03(\v2\x1a.station.StationAttachmentR\x05items\"n\n" +
	"\rUploadRequest\x12\x1d\n" +
	"\n" +
	"station_id\x18\x01 \x01(\x05R\tstationId\x12\x1b\n" +
	"\tfile_name\x18\x02 \x01(\tR\bfileName\x12!\n" +
	"\ffile_content\x18\x03 \x01(\fR\vfileContent\"c\n" +
	"\x0eTargetSelector\x124\n" +
	"\vtarget_type\x18\x01 \x01(\x0e2\x13.station.TargetTypeR\n" +
	"targetType\x12\x1b\n" +
	"\ttarget_id\x18\x02 \x01(\x05R\btargetId\"0\n" +
	"\rStationIDList\x12\x1f\n" +
	"\vstation_ids\x18\x01 \x03(\x05R\n" +
	"stationIds\"E\n" +
	"\x0fOperationStatus\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"6\n" +
	"\bEnumList\x12*\n" +
	"\x06values\x18\x01 \x03(\v2\x12.station.EnumValueR\x06values*V\n" +
	"\n" +
	"TargetType\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\v\n" +
	"\aSTATION\x10\x01\x12\x0e\n" +
	"\n" +
	"WATER_BODY\x10\x02\x12\r\n" +
	"\tCATCHMENT\x10\x03\x12\x0f\n" +
	"\vRIVER_BASIN\x10\x042\xf8\x16\n" +
	"\x0eStationService\x12U\n" +
	"\fListStations\x12\x15.station.StationQuery\x1a\x18.common.StandardResponse\"\x14\x82\xd3\xe4\x93\x02\x0e\x12\f/v0/stations\x12T\n" +
	"\rCreateStation\x12\x10.station.Station\x1a\x18.common.StandardResponse\"\x17\x82\xd3\xe4\x93\x02\x11:\x01*\"\f/v0/stations\x12o\n" +
	"\x13GetStationsByTarget\x12\x17.station.TargetSelector\x1a\x18.common.StandardResponse\"%\x82\xd3\xe4\x93\x02\x1f:\x01*\"\x1a/v0/stations_target/filter\x12m\n" +
	"\x1aGetStationBysByStationType\x12\x14.station.StationType\x1a\x18.common.StandardResponse\"\x1f\x82\xd3\xe4\x93\x02\x19:\x01*\"\x14/v0/stations/by_type\x12U\n" +
	"\n" +
	"GetStation\x12\x12.station.StationID\x1a\x18.common.StandardResponse\"\x19\x82\xd3\xe4\x93\x02\x13\x12\x11/v0/stations/{id}\x12d\n" +
	"\x0eDisableStation\x12\x12.station.StationID\x1a\x18.common.StandardResponse\"$\x82\xd3\xe4\x93\x02\x1e:\x01*\"\x19/v0/stations/{id}/disable\x12w\n" +
	"\x15GetParametersByTarget\x12\x17.station.TargetSelector\x1a\x18.common.StandardResponse\"+\x82\xd3\xe4\x93\x02%:\x01*\" /v0/station_parameters/by_target\x12l\n" +
	"\x15GetStationAttachments\x12\x12.station.StationID\x1a\x18.common.StandardResponse\"%\x82\xd3\xe4\x93\x02\x1f\x12\x1d/v0/stations/{id}/attachments\x12r\n" +
	"\x11UploadStationData\x12\x16.station.UploadRequest\x1a\x18.common.StandardResponse\"+\x82\xd3\xe4\x93\x02%:\x01*\" /v0/stations/{station_id}/upload\x12e\n" +
	"\x10QueryWaterBodies\x12\x17.station.WaterBodyQuery\x1a\x18.common.StandardResponse\"\x1e\x82\xd3\xe4\x93\x02\x18\x12\x16/v0/water_bodies/query\x12b\n" +
	"\x0fQueryCatchments\x12\x17.station.CatchmentQuery\x1a\x18.common.StandardResponse\"\x1c\x82\xd3\xe4\x93\x02\x16\x12\x14/v0/catchments/query\x12x\n" +
	"\x19ListCatchmentByRiverBasin\x12\x15.station.RiverBasinID\x1a\x18.common.StandardResponse\"*\x82\xd3\xe4\x93\x02$\x12\"/v0/catchments/by_river_basin/{id}\x12f\n" +
	"\x10QueryRiverBasins\x12\x18.station.RiverBasinQuery\x1a\x18.common.StandardResponse\"\x1e\x82\xd3\xe4\x93\x02\x18\x12\x16/v0/river_basins/query\x12]\n" +
	"\x0fListWaterBodies\x12\x16.google.protobuf.Empty\x1a\x18.common.StandardResponse\"\x18\x82\xd3\xe4\x93\x02\x12\x12\x10/v0/water_bodies\x12v\n" +
	"\x18ListWaterBodyByCatchment\x12\x14.station.CatchmentID\x1a\x18.common.StandardResponse\"*\x82\xd3\xe4\x93\x02$\x12\"/v0/water_bodies/by_catchment/{id}\x12\\\n" +
	"\x0fCreateWaterBody\x12\x12.station.WaterBody\x1a\x18.common.StandardResponse\"\x1b\x82\xd3\xe4\x93\x02\x15:\x01*\"\x10/v0/water_bodies\x12`\n" +
	"\x0fDeleteWaterBody\x12\x14.station.WaterBodyID\x1a\x18.common.StandardResponse\"\x1d\x82\xd3\xe4\x93\x02\x17*\x15/v0/water_bodies/{id}\x12a\n" +
	"\x10GetWaterBodyByID\x12\x14.station.WaterBodyID\x1a\x18.common.StandardResponse\"\x1d\x82\xd3\xe4\x93\x02\x17\x12\x15/v0/water_bodies/{id}\x12[\n" +
	"\x0eListCatchments\x12\x17.station.CatchmentQuery\x1a\x18.common.StandardResponse\"\x16\x82\xd3\xe4\x93\x02\x10\x12\x0e/v0/catchments\x12Z\n" +
	"\x0fCreateCatchment\x12\x12.station.Catchment\x1a\x18.common.StandardResponse\"\x19\x82\xd3\xe4\x93\x02\x13:\x01*\"\x0e/v0/catchments\x12^\n" +
	"\x0fDeleteCatchment\x12\x14.station.CatchmentID\x1a\x18.common.StandardResponse\"\x1b\x82\xd3\xe4\x93\x02\x15*\x13/v0/catchments/{id}\x12[\n" +
	"\fGetCatchment\x12\x14.station.CatchmentID\x1a\x18.common.StandardResponse\"\x1b\x82\xd3\xe4\x93\x02\x15\x12\x13/v0/catchments/{id}\x12]\n" +
	"\x0fListRiverBasins\x12\x16.google.protobuf.Empty\x1a\x18.common.StandardResponse\"\x18\x82\xd3\xe4\x93\x02\x12\x12\x10/v0/river_basins\x12^\n" +
	"\x10CreateRiverBasin\x12\x13.station.RiverBasin\x1a\x18.common.StandardResponse\"\x1b\x82\xd3\xe4\x93\x02\x15:\x01*\"\x10/v0/river_basins\x12b\n" +
	"\x10DeleteRiverBasin\x12\x15.station.RiverBasinID\x1a\x18.common.StandardResponse\"\x1d\x82\xd3\xe4\x93\x02\x17*\x15/v0/river_basins/{id}\x12c\n" +
	"\x11GetRiverBasinByID\x12\x15.station.RiverBasinID\x1a\x18.common.StandardResponse\"\x1d\x82\xd3\xe4\x93\x02\x17\x12\x15/v0/river_basins/{id}\x12]\n" +
	"\rListCountries\x12\x16.google.protobuf.Empty\x1a\x18.common.StandardResponse\"\x1a\x82\xd3\xe4\x93\x02\x14\x12\x12/v0/enum/countries\x12d\n" +
	"\x10ListStationTypes\x12\x16.google.protobuf.Empty\x1a\x18.common.StandardResponse\"\x1e\x82\xd3\xe4\x93\x02\x18\x12\x16/v0/enum/station_types\x12W\n" +
	"\n" +
	"ListStatus\x12\x16.google.protobuf.Empty\x1a\x18.common.StandardResponse\"\x17\x82\xd3\xe4\x93\x02\x11\x12\x0f/v0/enum/statusB8Z6sensor-data-service.backend/api/pb/stationpb;stationpbb\x06proto3"

var (
	file_stationpb_station_proto_rawDescOnce sync.Once
	file_stationpb_station_proto_rawDescData []byte
)

func file_stationpb_station_proto_rawDescGZIP() []byte {
	file_stationpb_station_proto_rawDescOnce.Do(func() {
		file_stationpb_station_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_stationpb_station_proto_rawDesc), len(file_stationpb_station_proto_rawDesc)))
	})
	return file_stationpb_station_proto_rawDescData
}

var file_stationpb_station_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_stationpb_station_proto_msgTypes = make([]protoimpl.MessageInfo, 34)
var file_stationpb_station_proto_goTypes = []any{
	(TargetType)(0),                   // 0: station.TargetType
	(*EnumValue)(nil),                 // 1: station.EnumValue
	(*Station)(nil),                   // 2: station.Station
	(*StationParameter)(nil),          // 3: station.StationParameter
	(*StationParameterList)(nil),      // 4: station.StationParameterList
	(*StationParamRequest)(nil),       // 5: station.StationParamRequest
	(*StationQuery)(nil),              // 6: station.StationQuery
	(*StationID)(nil),                 // 7: station.StationID
	(*RiverBasinID)(nil),              // 8: station.RiverBasinID
	(*CatchmentID)(nil),               // 9: station.CatchmentID
	(*WaterBodyID)(nil),               // 10: station.WaterBodyID
	(*StationList)(nil),               // 11: station.StationList
	(*StationResponse)(nil),           // 12: station.StationResponse
	(*StationLocation)(nil),           // 13: station.StationLocation
	(*StationWithLocation)(nil),       // 14: station.StationWithLocation
	(*WaterBody)(nil),                 // 15: station.WaterBody
	(*WaterBodyQuery)(nil),            // 16: station.WaterBodyQuery
	(*WaterBodyList)(nil),             // 17: station.WaterBodyList
	(*WaterBodyResponse)(nil),         // 18: station.WaterBodyResponse
	(*Catchment)(nil),                 // 19: station.Catchment
	(*CatchmentQuery)(nil),            // 20: station.CatchmentQuery
	(*StationType)(nil),               // 21: station.StationType
	(*CatchmentList)(nil),             // 22: station.CatchmentList
	(*CatchmentResponse)(nil),         // 23: station.CatchmentResponse
	(*RiverBasin)(nil),                // 24: station.RiverBasin
	(*RiverBasinQuery)(nil),           // 25: station.RiverBasinQuery
	(*RiverBasinList)(nil),            // 26: station.RiverBasinList
	(*RiverBasinResponse)(nil),        // 27: station.RiverBasinResponse
	(*StationAttachment)(nil),         // 28: station.StationAttachment
	(*StationAttachmentList)(nil),     // 29: station.StationAttachmentList
	(*UploadRequest)(nil),             // 30: station.UploadRequest
	(*TargetSelector)(nil),            // 31: station.TargetSelector
	(*StationIDList)(nil),             // 32: station.StationIDList
	(*OperationStatus)(nil),           // 33: station.OperationStatus
	(*EnumList)(nil),                  // 34: station.EnumList
	(*empty.Empty)(nil),               // 35: google.protobuf.Empty
	(*commonpb.StandardResponse)(nil), // 36: common.StandardResponse
}
var file_stationpb_station_proto_depIdxs = []int32{
	3,  // 0: station.StationParameterList.items:type_name -> station.StationParameter
	2,  // 1: station.StationList.stations:type_name -> station.Station
	2,  // 2: station.StationResponse.station:type_name -> station.Station
	2,  // 3: station.StationWithLocation.station:type_name -> station.Station
	13, // 4: station.StationWithLocation.location:type_name -> station.StationLocation
	15, // 5: station.WaterBodyList.water_bodies:type_name -> station.WaterBody
	15, // 6: station.WaterBodyResponse.water_body:type_name -> station.WaterBody
	19, // 7: station.CatchmentList.catchments:type_name -> station.Catchment
	19, // 8: station.CatchmentResponse.catchment:type_name -> station.Catchment
	24, // 9: station.RiverBasinList.river_basins:type_name -> station.RiverBasin
	24, // 10: station.RiverBasinResponse.river_basin:type_name -> station.RiverBasin
	28, // 11: station.StationAttachmentList.items:type_name -> station.StationAttachment
	0,  // 12: station.TargetSelector.target_type:type_name -> station.TargetType
	1,  // 13: station.EnumList.values:type_name -> station.EnumValue
	6,  // 14: station.StationService.ListStations:input_type -> station.StationQuery
	2,  // 15: station.StationService.CreateStation:input_type -> station.Station
	31, // 16: station.StationService.GetStationsByTarget:input_type -> station.TargetSelector
	21, // 17: station.StationService.GetStationBysByStationType:input_type -> station.StationType
	7,  // 18: station.StationService.GetStation:input_type -> station.StationID
	7,  // 19: station.StationService.DisableStation:input_type -> station.StationID
	31, // 20: station.StationService.GetParametersByTarget:input_type -> station.TargetSelector
	7,  // 21: station.StationService.GetStationAttachments:input_type -> station.StationID
	30, // 22: station.StationService.UploadStationData:input_type -> station.UploadRequest
	16, // 23: station.StationService.QueryWaterBodies:input_type -> station.WaterBodyQuery
	20, // 24: station.StationService.QueryCatchments:input_type -> station.CatchmentQuery
	8,  // 25: station.StationService.ListCatchmentByRiverBasin:input_type -> station.RiverBasinID
	25, // 26: station.StationService.QueryRiverBasins:input_type -> station.RiverBasinQuery
	35, // 27: station.StationService.ListWaterBodies:input_type -> google.protobuf.Empty
	9,  // 28: station.StationService.ListWaterBodyByCatchment:input_type -> station.CatchmentID
	15, // 29: station.StationService.CreateWaterBody:input_type -> station.WaterBody
	10, // 30: station.StationService.DeleteWaterBody:input_type -> station.WaterBodyID
	10, // 31: station.StationService.GetWaterBodyByID:input_type -> station.WaterBodyID
	20, // 32: station.StationService.ListCatchments:input_type -> station.CatchmentQuery
	19, // 33: station.StationService.CreateCatchment:input_type -> station.Catchment
	9,  // 34: station.StationService.DeleteCatchment:input_type -> station.CatchmentID
	9,  // 35: station.StationService.GetCatchment:input_type -> station.CatchmentID
	35, // 36: station.StationService.ListRiverBasins:input_type -> google.protobuf.Empty
	24, // 37: station.StationService.CreateRiverBasin:input_type -> station.RiverBasin
	8,  // 38: station.StationService.DeleteRiverBasin:input_type -> station.RiverBasinID
	8,  // 39: station.StationService.GetRiverBasinByID:input_type -> station.RiverBasinID
	35, // 40: station.StationService.ListCountries:input_type -> google.protobuf.Empty
	35, // 41: station.StationService.ListStationTypes:input_type -> google.protobuf.Empty
	35, // 42: station.StationService.ListStatus:input_type -> google.protobuf.Empty
	36, // 43: station.StationService.ListStations:output_type -> common.StandardResponse
	36, // 44: station.StationService.CreateStation:output_type -> common.StandardResponse
	36, // 45: station.StationService.GetStationsByTarget:output_type -> common.StandardResponse
	36, // 46: station.StationService.GetStationBysByStationType:output_type -> common.StandardResponse
	36, // 47: station.StationService.GetStation:output_type -> common.StandardResponse
	36, // 48: station.StationService.DisableStation:output_type -> common.StandardResponse
	36, // 49: station.StationService.GetParametersByTarget:output_type -> common.StandardResponse
	36, // 50: station.StationService.GetStationAttachments:output_type -> common.StandardResponse
	36, // 51: station.StationService.UploadStationData:output_type -> common.StandardResponse
	36, // 52: station.StationService.QueryWaterBodies:output_type -> common.StandardResponse
	36, // 53: station.StationService.QueryCatchments:output_type -> common.StandardResponse
	36, // 54: station.StationService.ListCatchmentByRiverBasin:output_type -> common.StandardResponse
	36, // 55: station.StationService.QueryRiverBasins:output_type -> common.StandardResponse
	36, // 56: station.StationService.ListWaterBodies:output_type -> common.StandardResponse
	36, // 57: station.StationService.ListWaterBodyByCatchment:output_type -> common.StandardResponse
	36, // 58: station.StationService.CreateWaterBody:output_type -> common.StandardResponse
	36, // 59: station.StationService.DeleteWaterBody:output_type -> common.StandardResponse
	36, // 60: station.StationService.GetWaterBodyByID:output_type -> common.StandardResponse
	36, // 61: station.StationService.ListCatchments:output_type -> common.StandardResponse
	36, // 62: station.StationService.CreateCatchment:output_type -> common.StandardResponse
	36, // 63: station.StationService.DeleteCatchment:output_type -> common.StandardResponse
	36, // 64: station.StationService.GetCatchment:output_type -> common.StandardResponse
	36, // 65: station.StationService.ListRiverBasins:output_type -> common.StandardResponse
	36, // 66: station.StationService.CreateRiverBasin:output_type -> common.StandardResponse
	36, // 67: station.StationService.DeleteRiverBasin:output_type -> common.StandardResponse
	36, // 68: station.StationService.GetRiverBasinByID:output_type -> common.StandardResponse
	36, // 69: station.StationService.ListCountries:output_type -> common.StandardResponse
	36, // 70: station.StationService.ListStationTypes:output_type -> common.StandardResponse
	36, // 71: station.StationService.ListStatus:output_type -> common.StandardResponse
	43, // [43:72] is the sub-list for method output_type
	14, // [14:43] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_stationpb_station_proto_init() }
func file_stationpb_station_proto_init() {
	if File_stationpb_station_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_stationpb_station_proto_rawDesc), len(file_stationpb_station_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   34,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_stationpb_station_proto_goTypes,
		DependencyIndexes: file_stationpb_station_proto_depIdxs,
		EnumInfos:         file_stationpb_station_proto_enumTypes,
		MessageInfos:      file_stationpb_station_proto_msgTypes,
	}.Build()
	File_stationpb_station_proto = out.File
	file_stationpb_station_proto_goTypes = nil
	file_stationpb_station_proto_depIdxs = nil
}
