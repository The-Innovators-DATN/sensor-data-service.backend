syntax = "proto3";

package dashboard;

import "google/api/annotations.proto";
import "commonpb/common.proto";
import "google/protobuf/struct.proto";

option go_package = "sensor-data-service.backend/api/pb/dashboardpb;dashboardpb";

message Dashboard {
  string uid = 1;
  string name = 2;
  string description = 3;
  google.protobuf.Struct layout_configuration = 4;
  int32 created_by = 5;
  string created_at = 6;
  string updated_at = 7;
  int32 version = 8;
  string status = 9;
}

message DashboardID {
  string uid = 1;
}

message CreatedBy {
  int32 created_by = 1;
}
message PaginateDashboardsRequest {
  int32 page = 1;
  int32 limit = 2;
  int32 created_by = 3;
}

message DashboardList {
  repeated Dashboard dashboards = 1;
}
message GetDashboardRequest {
  string uid = 1;
  int32 created_by = 2;
}

message CreateDashboardRequest {
  Dashboard dashboard = 1;
}

message UpdateDashboardRequest {
  string uid = 1;
  Dashboard dashboard = 2;
  int32 created_by = 3;
}

message DeleteDashboardRequest {
  string uid = 1;
  int32 created_by = 2;
}


message PatchDashboardRequest {
  string uid = 1;
  string name = 2;
  string description = 3;
  string layout_configuration = 4;
  string status = 5;
  int32 created_by = 6;
}

service DashboardService {
  rpc GetDashboard(GetDashboardRequest) returns (common.StandardResponse) {
    option (google.api.http) = {
      get: "/v0/dashboards/{uid}"
    };
  }

  rpc ListDashboards(PaginateDashboardsRequest) returns (common.StandardResponse) {
    option (google.api.http) = {
      get: "/v0/dashboards"
    };
  }

  rpc CreateDashboard(CreateDashboardRequest) returns (common.StandardResponse) {
    option (google.api.http) = {
      post: "/v0/dashboards"
      body: "*"
    };
  }

  rpc UpdateDashboard(UpdateDashboardRequest) returns (common.StandardResponse) {
    option (google.api.http) = {
      put: "/v0/dashboards/{uid}"
      body: "*"
    };
  }

  rpc PatchDashboard(PatchDashboardRequest) returns (common.StandardResponse) {
    option (google.api.http) = {
      patch: "/v0/dashboards/{uid}"
      body: "*"
    };
  }

  rpc DeleteDashboard(DeleteDashboardRequest) returns (common.StandardResponse) {
    option (google.api.http) = {
      delete: "/v0/dashboards/{uid}"
    };
  }
}
