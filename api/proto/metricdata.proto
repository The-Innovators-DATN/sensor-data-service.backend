syntax = "proto3";

package metricdata;

import "google/api/annotations.proto";

option go_package = "pb/metricdatapb;metricdatapb";

message TimeRange {
  string from = 1;
  string to = 2;
}

enum TargetType {
  UNKNOWN = 0;
  STATION = 1;
  WATER_BODY = 2;
  CATCHMENT = 3;
  RIVER_BASIN = 4;
}

message SeriesSelector {
  string ref_id = 1;
  TargetType target_type = 2;
  int32 target_id = 3;
  int32 metric_id = 4;
}

message ForecastConfig {
  bool enabled = 1;
  int32 time_step = 2;
  int32 horizon = 3;
}

// message AnomalyDetectionConfig {
//   bool enabled = 1;
//   float local_error_threshold = 2;
// }

message MetricSeriesRequest {
  string chart_type = 1;
  TimeRange time_range = 2;
  ForecastConfig forecast = 3;
  // AnomalyDetectionConfig anomaly_detection = 4;
  repeated SeriesSelector series = 5;
}

message MetricPoint {
  string datetime = 1;
  float value = 2;
  float local_error = 3;
  // bool anomaly = 3;
}

message SeriesData {
  string ref_id = 1;
  TargetType target_type = 2;
  int32 target_id = 3;
  int32 metric_id = 4;
  repeated MetricPoint series = 5;
  repeated MetricPoint forecast = 6;
}

message MetricSeriesResponse {
  repeated SeriesData results = 1;
}

service MetricDataService {
  rpc GetMetricSeries(MetricSeriesRequest) returns (MetricSeriesResponse){
    option (google.api.http) = {
      post: "/v0/metric_series"
      body: "*"
    };
    // option (google.api.method_signature) = "chart_type,time_range,forecast,anomaly_detection,series";
  }
}
